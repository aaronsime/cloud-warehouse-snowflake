name: "Terraform Plan Template"

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      workspace-name:
        required: true
        type: string
    secrets:
      tf-api-token:
        required: true

jobs:
  terraform-plan:
    name: ${{ inputs.env }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Terraform ${{ inputs.env }} Workspace
        run: sed -i 's/$TF_WORKSPACE/${{ inputs.workspace-name }}/' main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.tf-api-token }}

      - name: Terraform Format
        continue-on-error: true
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        continue-on-error: true
        id: init
        run: terraform init

      - name: Terraform Validate
        continue-on-error: true
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        continue-on-error: true
        id: plan
        run: |
          terraform plan --var-file="vars/${{ inputs.env }}.tfvars"


      - name: "Post Plan to PR"
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format & Style: \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization: \`${{ steps.init.outcome }}\`
            #### Terraform Validation: \`${{ steps.validate.outcome }}\`
            #### Terraform Plan ${{ inputs.env }} Env: \`${{ steps.plan.outcome }}\`

            <details>
            <summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Action: \`${{ github.event_name }}\`, Pushed By: \`${{ github.actor }}\`*`;

            github.rest.issues.createComment({
              body: output,
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
